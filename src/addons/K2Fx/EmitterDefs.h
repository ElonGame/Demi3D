
class CSimpleEmitterDef
{
public:
    CSimpleEmitterDef(
        std::string const&,
        CRange<int> const&, 
        CRange<int> const&,
        CRange<int> const&, 
        CRange<int> const&, 
        CRange<int> const&,
        bool,
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<int> const&, 
        CTemporalPropertyRange<int> const&,
        int, 
        CTemporalPropertyRange<int> const&,
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&,
        unsigned int, 
        CVec3<float> const&, 
        EDirectionalSpace, 
        float,
        float, 
        std::string const&,
        CVec3<float> const&, 
        CVec3<float> const&,
        CTemporalProperty<CVec3<float> > const&,
        CTemporalProperty<CVec3<float> > const&,
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&, 
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&,
        bool, 
        bool, 
        EDirectionalSpace,
        CTemporalProperty<CVec3<float> > const&, 
        CTemporalPropertyRange<float> const&,
        CTemporalPropertyRange<float> const&, 
        float
    );
};